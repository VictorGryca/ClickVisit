<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <title>Agenda do Corretor <%= broker.name %> / <%= property.address %></title>
  <link rel="stylesheet" href="/css/calendar.css">
  <link rel="stylesheet" href="/css/client-calendar.css">
  <script>
    function selectDay(dateStr) {
      const url = new URL(window.location.href);
      url.searchParams.set('day', dateStr);
      window.location.href = url.toString();
    }
    function changeMonth(delta) {
      const url = new URL(window.location.href);
      let month = parseInt(url.searchParams.get('month') || '<%= currentMonth %>');
      let year = parseInt(url.searchParams.get('year') || '<%= currentYear %>');
      month += delta;
      if (month < 1) { month = 12; year--; }
      if (month > 12) { month = 1; year++; }
      url.searchParams.set('month', month);
      url.searchParams.set('year', year);
      window.location.href = url.toString();
    }
  </script>
</head>
<body>
  <div class="client-calendar">
    <aside class="client-sidebar">
      <div class="avatar">Imobiliária</div>
      <div class="avatar-small">Corretor</div>
      <div class="property-img"></div>
      <div class="prop-address"><%= property.address %></div>
      <!-- espaço para possível info de slot selecionado -->
      <div class="desc-box"></div>
    </aside>

    <main class="calendar-main">
      <h2>Selecione a data e horário</h2>
      <div>
        <button onclick="changeMonth(-1)">&lt; Mês anterior</button>
        <strong><%= currentMonthName %> / <%= currentYear %></strong>
        <button onclick="changeMonth(1)">Próximo mês &gt;</button>
      </div>
  <%
    // Função para criar Date em UTC-3 (São Paulo)
    function dateInSaoPaulo(dateStr) {
      if (!dateStr) return null;
      const d = new Date(dateStr);
      d.setHours(d.getHours() + 3);
      return d;
    }
    function getDateStrSP(dateStr) {
      const d = dateInSaoPaulo(dateStr);
      if (!d) return '';
      return d.getFullYear() + '-' +
             (d.getMonth() + 1).toString().padStart(2, '0') + '-' +
             d.getDate().toString().padStart(2, '0');
    }
    // Dia de hoje em São Paulo (UTC-3)
    const now = new Date();
    now.setHours(now.getHours() + 3);
    const todayStrSP = now.getFullYear() + '-' +
                       (now.getMonth() + 1).toString().padStart(2, '0') + '-' +
                       now.getDate().toString().padStart(2, '0');
  %>
  <table class="calendar">
    <thead>
      <tr>
        <th>Dom</th><th>Seg</th><th>Ter</th><th>Qua</th><th>Qui</th><th>Sex</th><th>Sáb</th>
      </tr>
    </thead>
    <tbody>
      <%
        let day = 1;
        for (let week = 0; week < 6; week++) {
      %>
        <tr>
        <% for (let dow = 0; dow < 7; dow++) {
          const cellDate = new Date(currentYear, currentMonth - 1, day);
          const cellDateStr = cellDate.getFullYear() + '-' +
                              (cellDate.getMonth() + 1).toString().padStart(2, '0') + '-' +
                              cellDate.getDate().toString().padStart(2, '0');
          const isToday = (cellDateStr === todayStrSP);
          const isSelected = (cellDateStr === selectedDay);
          const isThisMonth = (week > 0 || dow >= firstDayOfWeek) && day <= daysInMonth;
          let slots = [];
          if (isThisMonth && availabilityByDay[cellDateStr]) {
            slots = availabilityByDay[cellDateStr];
          }
          const hasSlot = slots.length > 0;
        %>
          <td class="calendar-day
            <% if (isThisMonth) { %>
              <% if (isToday) { %> today<% } %>
              <% if (isSelected) { %> selected<% } %>
              <% if (hasSlot) { %> has-slot<% } %>
            <% } %>"
            <% if (isThisMonth) { %>
              onclick="selectDay('<%= cellDateStr %>')"
              title="Clique para ver horários"
            <% } %>
          >
            <% if (isThisMonth) { %>
              <div class="day-num"><%= day %></div>
            <% } %>
          </td>
        <% if (isThisMonth) day++; } %>
        </tr>
        <% if (day > daysInMonth) break; %>
      <% } %>
    </tbody>
  </table>
    </main>

    <aside class="client-sidebar-right">
      <div id="dateLabel" class="date-label"></div>
      <form id="visitForm" method="get" action="/client/schedule/<%= broker.id %>/<%= property.id %>/book" style="width:100%;">
        <ul class="slot-list">
        <% if (availabilityByDay[selectedDay] && availabilityByDay[selectedDay].length > 0) { %>
          <% availabilityByDay[selectedDay].forEach(slot => { %>
            <li>
              <label class="slot-btn" data-time="<%= slot %>">
                <input type="radio" name="slot" value="<%= slot %>" style="display:none;">
                <span class="slot-time"><%= slot %></span>
                <span class="slot-confirm">OK</span>
              </label>
            </li>
          <% }) %>
        <% } else { %>
          <li>Nenhum horário disponível.</li>
        <% } %>
        </ul>
        <input type="hidden" name="day" value="<%= selectedDay %>">
      </form>
    </aside>
  </div>
  <footer class="footer">Imobiliária &middot; Copyright © - 2025</footer>

  <script>
    // Realça o slot escolhido
    const slotWrappers = document.querySelectorAll('.slot-btn');
    slotWrappers.forEach(w => {
      const radio = w.querySelector('input[type="radio"]');
      const confirmSpan = w.querySelector('.slot-confirm');
      const timeSpan = w.querySelector('.slot-time');

      timeSpan.addEventListener('click', () => {
        // remove active from others
        slotWrappers.forEach(o => o.classList.remove('active'));
        w.classList.add('active');
        radio.checked = true;
      });

      confirmSpan.addEventListener('click', () => {
        // ensure selected and then submit form
        radio.checked = true;
        document.getElementById('visitForm').submit();
      });
    });

    // Define label de data
    const label = document.getElementById('dateLabel');
    if (label) {
      const parts = '<%= selectedDay %>'.split('-');
      const selDate = new Date(parts[0], parts[1]-1, parts[2]);
      const opts = { weekday: 'long', day: 'numeric', month: 'long' };
      label.textContent = selDate.toLocaleDateString('pt-BR', opts);
    }
  </script>
</body>
</html>
